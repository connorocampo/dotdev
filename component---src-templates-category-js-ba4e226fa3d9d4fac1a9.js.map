{"version":3,"sources":["webpack:///./src/components/base/Page.js","webpack:///./src/components/PostsListCard.js","webpack:///./src/components/PostList.js","webpack:///./src/templates/category.js"],"names":["children","style","height","margin","padding","maxWidth","PostTitle","styled","div","props","theme","size","medium","PostsListCard","timeToRead","frontmatter","fields","excerpt","title","slug","className","date","dangerouslySetInnerHTML","__html","description","to","border","PostsList","postEdges","map","node","key","Heading","header","pageQuery","CategoryTemplate","location","pageContext","data","category","themeSettings","Layout","Helmet","name","content","Header","Page","marginBottom","allMarkdownRemark","totalCount","PostList","edges","Footer"],"mappings":"2OAEe,kBAAGA,EAAH,EAAGA,SAAH,OACb,yBACEC,MAAO,CACLC,OAAQ,OACRC,OAAQ,SACRC,QAAS,cACTC,SAAU,WAGXL,I,wBCNCM,EAAYC,IAAOC,IAAV,+EAAGD,CAAH,mJAGA,SAACE,GAAD,OAAWA,EAAMC,MAAMC,KAAKC,UA+B5BC,EA5BO,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClDC,EAAQH,EAAYG,OAASF,EAAOG,KAE1C,OACE,6BACE,yBAAKlB,MAAO,CAAEE,OAAQ,WACpB,kBAACG,EAAD,KAAYY,GACZ,uBAAGE,UAAU,iBACVL,EAAYM,KADf,MACwBP,EADxB,aAGA,yBACEQ,wBAAyB,CACvBC,OAAQR,EAAYS,aAAeP,GAErChB,MAAO,CAAEE,OAAQ,YAEnB,kBAAC,OAAD,CACEsB,GAAE,IAAMT,EAAOG,KAAb,IACFC,UAAU,mCAFZ,gBAOF,wBAAInB,MAAO,CAAEyB,OAAQ,yBCzBZC,EANG,SAAC,GACjB,OADmC,EAAhBC,UACFC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACtB,OAAO,kBAAC,EAAD,eAAeC,IAAKD,EAAKd,OAAOG,MAAUW,Q,YCU/CE,EAAUzB,IAAOC,IAAV,wEAAGD,CAAH,kMAGE,SAACE,GAAD,OAAWA,EAAMC,MAAMC,KAAKsB,UAsC9BC,EAAS,aAyBPC,UA1DU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzCC,EAAaF,EAAbE,SACR,OACE,kBAAC,IAAD,CAAe7B,MAAO8B,KACpB,kBAACC,EAAA,EAAD,CAAQL,SAAUA,EAAUlB,MAAK,sBAAwBqB,EAAxB,KAC/B,kBAACG,EAAA,EAAD,KACE,+BAAQH,EAAR,8BACA,0BACEI,KAAK,0BACLC,QAAQ,4BAEV,0BAAMD,KAAK,cAAcC,QAAQ,YACjC,0BACED,KAAK,cACLC,QAAQ,oDAGZ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAD,KAGE,yBAAK7C,MAAO,CAAE8C,aAAc,UAC1B,kBAACf,EAAD,KAAUO,GACV,4BAAKD,EAAKU,kBAAkBC,WAA5B,UACA,kBAACC,EAAD,CAAUtB,UAAWU,EAAKU,kBAAkBG,UAGhD,kBAACC,EAAA,EAAD","file":"component---src-templates-category-js-ba4e226fa3d9d4fac1a9.js","sourcesContent":["import React from \"react\"\n\nexport default ({ children }) => (\n  <div\n    style={{\n      height: \"100%\",\n      margin: \"0 auto\",\n      padding: \"0 0 100px 0\",\n      maxWidth: \"1200px\",\n    }}\n  >\n    {children}\n  </div>\n)\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst PostTitle = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-size: ${(props) => props.theme.size.medium};\n`;\n\nconst PostsListCard = ({ timeToRead, frontmatter, fields, excerpt }) => {\n  const title = frontmatter.title || fields.slug;\n\n  return (\n    <div>\n      <div style={{ margin: \"25px 0\" }}>\n        <PostTitle>{title}</PostTitle>\n        <p className=\"post-subtitle\">\n          {frontmatter.date} - {timeToRead} min read\n        </p>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: frontmatter.description || excerpt,\n          }}\n          style={{ margin: \"25px 0\" }}\n        />\n        <Link\n          to={`/${fields.slug}/`}\n          className=\"is-gradient blog-list-read-more\"\n        >\n          Read More &rarr;\n        </Link>\n      </div>\n      <hr style={{ border: \"1px solid #eeeeee\" }} />\n    </div>\n  );\n};\n\nexport default PostsListCard;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 280)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PostsListCard from \"./PostsListCard\"\n\nconst PostsList = ({ postEdges }) => {\n  return postEdges.map(({ node }) => {\n    return <PostsListCard key={node.fields.slug} {...node} />\n  })\n}\n\nexport default PostsList","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { ThemeProvider } from \"styled-components\"\nimport themeSettings from \"../components/base/settings\"\n\n// Components\n\nimport Layout from \"../components/base/Layout\"\nimport Header from \"../components/base/Header\"\nimport Page from \"../components/base/Page\"\nimport PostList from \"../components/PostList\"\nimport Footer from \"../components/base/Footer\"\n\nconst Heading = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-size: ${(props) => props.theme.size.header};\n  margin: 100px 0 50px 0;\n  text-transform: uppercase;\n`\n\nconst CategoryTemplate = ({ location, pageContext, data }) => {\n  const { category } = pageContext\n  return (\n    <ThemeProvider theme={themeSettings}>\n      <Layout location={location} title={`Posts in category \"${category}\"`}>\n        <Helmet>\n          <title>{category} | Connor Ocampo's Website</title>\n          <meta\n            name=\"Connor Ocampo's Website\"\n            content=\"Connor Ocampo's Website\"\n          />\n          <meta name=\"theme-color\" content=\"#0090D9\" />\n          <meta\n            name=\"description\"\n            content=\"The category page for Connor Ocampo's website.\"\n          />\n        </Helmet>\n        <Header />\n        <Page>\n          {/* <SEO title={`Posts in category \"${category}\"`} /> */}\n\n          <div style={{ marginBottom: \"100px\" }}>\n            <Heading>{category}</Heading>\n            <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n            <PostList postEdges={data.allMarkdownRemark.edges} />\n          </div>\n        </Page>\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  )\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      filter: { fields: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            category\n          }\n          excerpt(pruneLength: 280)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n"],"sourceRoot":""}